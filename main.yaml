---
- hosts: all
  become: yes
  gather_facts: yes

  tasks:
#-------------------BOUNCER

    - yum:
        name: "{{ item }}"
        state: present
      loop:
         - haproxy
      when: "'node_bouncer' in group_names"

    - systemd:
        name: haproxy
        enabled: yes
        state: started
      when: "'node_bouncer' in group_names"

    - template:
        src: haproxy.j2
        dest: /etc/haproxy.cfg
      when: "'node_bouncer' in group_names"


    - shell:
        cmd: "iptables -I INPUT 1 -p tcp -m tcp --dport 5000 -j ACCEPT"
      when: "'node_bouncer' in group_names"


#-------------------DATABASE
    - unarchive:
        src: app.tar.gz
        copy: yes
        dest: /tmp/
      when: "'node_database' in group_names"        

    # - file:
    #     src: /opt/app/myapp.service
    #     dest: /usr/lib/systemd/system/myapp.service
    #     state: link
    #   when: "'node_app' in group_names"

    # - template:
    #     src: env_template.j2
    #     dest: /opt/app/.env
    #   when: "'node_app' in group_names"

    - yum:
        name: "{{ item }}"
        state: present
      loop:
         - yum-utils
         - mariadb-server
      when: "'node_database' in group_names"

    - shell:
        cmd: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when: "'node_database' in group_names"

    - yum:
        name: "{{ item }}"
        state: present
      loop:
         - docker-ce 
         - docker-ce-cli 
         - containerd.io
      when: "'node_database' in group_names"

    - systemd:
        name: docker
        enabled: yes
        state: started
      when: "'node_database' in group_names"

    - file:
        path: /opt/registry
        state: directory

    - shell:
        cmd: docker run -d -p 5099:5099 --restart=always --name registry -v /opt/registry:/var/lib/registry registry:2
      when: "'node_database' in group_names"

    - systemd:
        name: mariadb
        enabled: yes
        state: started
      when: "'node_database' in group_names"

    - copy:
        src: db.sql
        dest: /tmp/
      tags: files
      when: "'node_database' in group_names"

    - shell:
        cmd: mysql < /tmp/db.sql && rm /tmp/db.sql
      when: "'node_database' in group_names"

    - shell:
        cmd: "iptables -I INPUT 1 -s {{ item }} -p tcp -m tcp --dport 3306 -j ACCEPT"
      loop: "{{ allowed_ip|flatten(levels=1) }}"
      when: "'node_database' in group_names"

    - shell:
        cmd: "iptables -I INPUT 1 -s {{ item }} -p tcp -m tcp --dport 5099 -j ACCEPT"
      loop: "{{ allowed_ip|flatten(levels=1) }}"
      when: "'node_database' in group_names"


#-------------------APP
    - yum:
        name: "{{ item }}"
        state: present
      loop:
         - python-setuptools
         - python3
         - screen
      when: "'node_app' in group_names"

    - pip:
        executable: /usr/bin/pip3
        name: virtualenv
        state: present
      when: "'node_app' in group_names"

    - unarchive:
        src: app.tar.gz
        copy: yes
        dest: /opt
      when: "'node_app' in group_names"        

    - shell:
        cmd: /usr/bin/pip3 install -r /opt/app/requirements.txt
      when: "'node_app' in group_names"

    - file:
        src: /opt/app/myapp.service
        dest: /usr/lib/systemd/system/myapp.service
        state: link
      when: "'node_app' in group_names"

    - template:
        src: env_template.j2
        dest: /opt/app/.env
      when: "'node_app' in group_names"

    - systemd:
        daemon_reload: yes
        name: myapp
        enabled: yes
        state: started
      when: "'node_app' in group_names"

    - shell:
        cmd: "iptables -I INPUT 1 -p tcp -m tcp --dport 5000 -j ACCEPT"
      when: "'node_app' in group_names"